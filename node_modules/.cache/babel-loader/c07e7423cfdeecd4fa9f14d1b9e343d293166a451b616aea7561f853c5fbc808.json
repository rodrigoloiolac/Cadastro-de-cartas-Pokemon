{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wegyl\\\\cartas-pokemon\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PokemonForm from \"./components/PokemonForm\";\nimport PokemonList from \"./components/PokemonList\";\nimport LoginForm from \"./components/LoginForm\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado para verificar se o usuário está logado\n\n  const addPokemon = pokemon => {\n    setPokemons([...pokemons, pokemon]);\n  };\n  const removePokemon = indexToRemove => {\n    setPokemons(pokemons.filter((_, index) => index !== indexToRemove));\n  };\n  const handleLogin = (username, password) => {\n    // Validação simples de usuário\n    if (username === \"admin\" && password === \"1234\") {\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Usuário ou senha inválidos!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastro de Cartas Pok\\xE9mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PokemonForm, {\n        addPokemon: addPokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PokemonList, {\n        pokemons: pokemons,\n        removePokemon: removePokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WCxJ5Q5WShmQb4Kv72k+w606dBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PokemonForm","PokemonList","LoginForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","pokemons","setPokemons","isLoggedIn","setIsLoggedIn","addPokemon","pokemon","removePokemon","indexToRemove","filter","_","index","handleLogin","username","password","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/wegyl/cartas-pokemon/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PokemonForm from \"./components/PokemonForm\";\nimport PokemonList from \"./components/PokemonList\";\nimport LoginForm from \"./components/LoginForm\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado para verificar se o usuário está logado\n\n  const addPokemon = (pokemon) => {\n    setPokemons([...pokemons, pokemon]);\n  };\n\n  const removePokemon = (indexToRemove) => {\n    setPokemons(pokemons.filter((_, index) => index !== indexToRemove));\n  };\n\n  const handleLogin = (username, password) => {\n    // Validação simples de usuário\n    if (username === \"admin\" && password === \"1234\") {\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Usuário ou senha inválidos!\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? (\n        <>\n          <h1>Cadastro de Cartas Pokémon</h1>\n          <PokemonForm addPokemon={addPokemon} />\n          <PokemonList pokemons={pokemons} removePokemon={removePokemon} />\n\n        </>\n      ) : (\n        <LoginForm onLogin={handleLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMc,UAAU,GAAIC,OAAO,IAAK;IAC9BJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,OAAO,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,aAAa,GAAIC,aAAa,IAAK;IACvCN,WAAW,CAACD,QAAQ,CAACQ,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKH,aAAa,CAAC,CAAC;EACrE,CAAC;EAED,MAAMI,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,MAAM,EAAE;MAC/CV,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLW,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBd,UAAU,gBACTP,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCzB,OAAA,CAACJ,WAAW;QAACa,UAAU,EAAEA;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCzB,OAAA,CAACH,WAAW;QAACQ,QAAQ,EAAEA,QAAS;QAACM,aAAa,EAAEA;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAEjE,CAAC,gBAEHzB,OAAA,CAACF,SAAS;MAAC4B,OAAO,EAAEV;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAnCID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}